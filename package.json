{
    "name": "@asyncapi/rust-template",
    "version": "1.0.0",
    "description": "AsyncAPI template for generating production-ready Rust servers",
    "keywords": [
        "asyncapi",
        "template",
        "rust",
        "generator",
        "async",
        "server",
        "microservices",
        "mqtt",
        "kafka",
        "websocket",
        "http"
    ],
    "author": "AsyncAPI Community",
    "license": "MIT",
    "repository": {
        "type": "git",
        "url": "https://github.com/asyncapi/rust-template.git"
    },
    "bugs": {
        "url": "https://github.com/asyncapi/rust-template/issues"
    },
    "homepage": "https://github.com/asyncapi/rust-template#readme",
    "main": "template/index.js",
    "scripts": {
        "test": "npm run test:template && npm run test:generated",
        "test:template": "echo 'Template validation tests would go here'",
        "test:generated": "npm run test:multi",
        "test:simple": "asyncapi generate fromTemplate examples/simple/asyncapi.yaml ./ -o test-output-simple --force-write && cd test-output-simple && cargo check",
        "test:mqtt": "asyncapi generate fromTemplate examples/mqtt/asyncapi.yaml ./ -o test-output-mqtt --force-write && cd test-output-mqtt && cargo check",
        "test:multi": "asyncapi generate fromTemplate examples/multi-protocol/asyncapi.yaml ./ -o test-output-multi --force-write && cd test-output-multi && cargo build && cargo test",
        "test:examples": "npm run test:simple && npm run test:mqtt",
        "lint": "eslint .",
        "lint:fix": "eslint . --fix",
        "clean": "rm -rf test-output test-output-simple test-output-mqtt"
    },
    "dependencies": {
        "@asyncapi/generator-react-sdk": "^1.0.20"
    },
    "devDependencies": {
        "eslint": "^8.57.0",
        "prettier": "^3.2.5"
    },
    "generator": {
        "renderer": "react",
        "apiVersion": "v3",
        "supportedProtocols": [
            "http",
            "https",
            "ws",
            "wss",
            "mqtt",
            "mqtts",
            "kafka",
            "kafka-secure",
            "amqp",
            "amqps"
        ],
        "parameters": {
            "packageName": {
                "description": "Name of the generated Rust package",
                "default": "asyncapi-server",
                "required": false
            },
            "packageVersion": {
                "description": "Version of the generated Rust package",
                "default": "0.1.0",
                "required": false
            },
            "enableMetrics": {
                "description": "Enable Prometheus metrics collection",
                "default": false,
                "required": false
            },
            "enableTracing": {
                "description": "Enable OpenTelemetry distributed tracing",
                "default": false,
                "required": false
            },
            "enableAuth": {
                "description": "Enable authentication middleware",
                "default": false,
                "required": false
            },
            "enableConnectionPooling": {
                "description": "Enable connection pooling for better performance",
                "default": false,
                "required": false
            },
            "enableBatching": {
                "description": "Enable message batching for high throughput",
                "default": false,
                "required": false
            },
            "enableDynamicConfig": {
                "description": "Enable dynamic configuration reloading",
                "default": false,
                "required": false
            },
            "enableFeatureFlags": {
                "description": "Enable feature flag support",
                "default": false,
                "required": false
            }
        },
        "nonRenderableFiles": [
            "examples/**/*",
            "test/**/*",
            "*.md",
            "LICENSE"
        ],
        "generator": ">=1.15.0 <2.0.0"
    },
    "files": [
        "template",
        "README.md",
        "LICENSE"
    ]
}