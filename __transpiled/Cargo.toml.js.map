{"version":3,"file":"Cargo.toml.js","sources":["../template/Cargo.toml.js"],"sourcesContent":["export default function CargoToml({ asyncapi, params }) {\n    const info = asyncapi.info();\n\n    // Generate package name from title if not provided\n    let defaultPackageName = 'asyncapi-server';\n    const title = info.title();\n    if (title) {\n        const transformed = title\n            .toLowerCase()\n            .replace(/[^a-z0-9\\s-]/g, '') // Remove non-alphanumeric chars except spaces and hyphens\n            .replace(/\\s+/g, '-')         // Replace spaces with hyphens\n            .replace(/-+/g, '-')          // Replace multiple hyphens with single hyphen\n            .replace(/^-+|-+$/g, '');     // Remove leading/trailing hyphens\n\n        // Ensure it's a valid Rust package name\n        if (transformed && transformed.length > 0) {\n            defaultPackageName = transformed;\n        }\n    }\n\n    // Use generated package name if params.packageName is the default value\n    let packageName = defaultPackageName;\n    if (params.packageName && params.packageName !== 'asyncapi-server') {\n        packageName = params.packageName;\n    }\n    const useAsyncStd = params.useAsyncStd === 'true' || params.useAsyncStd === true;\n\n    // Detect protocols from servers\n    const servers = asyncapi.servers();\n    const protocols = new Set();\n\n    if (servers) {\n        Object.entries(servers).forEach(([_name, server]) => {\n            const protocol = server.protocol && server.protocol();\n            if (protocol) {\n                protocols.add(protocol.toLowerCase());\n            }\n        });\n    }\n\n    // Generate protocol-specific dependencies\n    let protocolDeps = '';\n    if (protocols.has('mqtt') || protocols.has('mqtts')) {\n        protocolDeps += 'rumqttc = \"0.24\"\\n';\n    }\n    if (protocols.has('kafka')) {\n        protocolDeps += 'rdkafka = \"0.36\"\\ntokio-stream = \"0.1\"\\n';\n    }\n    if (protocols.has('amqp') || protocols.has('amqps')) {\n        protocolDeps += 'lapin = \"2.3\"\\ntokio-stream = \"0.1\"\\n';\n    }\n    if (protocols.has('ws') || protocols.has('wss')) {\n        if (useAsyncStd) {\n            protocolDeps += 'async-tungstenite = \"0.24\"\\nfutures-util = \"0.3\"\\nurl = \"2.5\"\\n';\n        } else {\n            protocolDeps += 'tokio-tungstenite = \"0.21\"\\nfutures-util = \"0.3\"\\nurl = \"2.5\"\\nbase64 = \"0.22\"\\n';\n        }\n    }\n    if (protocols.has('http') || protocols.has('https')) {\n        if (useAsyncStd) {\n            protocolDeps += 'tide = \"0.16\"\\n';\n        } else {\n            protocolDeps += 'axum = \"0.7\"\\ntower = \"0.4\"\\n';\n        }\n    }\n\n    // Choose async runtime\n    const asyncRuntime = useAsyncStd\n        ? 'async-std = { version = \"1.12\", features = [\"attributes\"] }'\n        : 'tokio = { version = \"1.0\", features = [\"full\"] }';\n\n    const devDeps = useAsyncStd\n        ? 'async-std-test = \"0.1\"'\n        : 'tokio-test = \"0.4\"';\n\n    return (\n        <File name=\"Cargo.toml\">\n            {`[package]\nname = \"${packageName}\"\nversion = \"0.1.0\"\nedition = \"2021\"\ndescription = \"${info.description() || 'AsyncAPI generated Rust server'}\"\n\n[dependencies]\n${asyncRuntime}\nserde = { version = \"1.0\", features = [\"derive\"] }\nserde_json = \"1.0\"\nanyhow = \"1.0\"\nthiserror = \"1.0\"\ntracing = \"0.1\"\ntracing-subscriber = \"0.3\"\nuuid = { version = \"1.0\", features = [\"v4\", \"serde\"] }\nchrono = { version = \"0.4\", features = [\"serde\"] }\nasync-trait = \"0.1\"\nrand = \"0.8\"\nderive_builder = \"0.20\"\nregex = \"1.10\"\n\n# Optional dependencies for advanced features\nprometheus = { version = \"0.13\", optional = true }\nopentelemetry = { version = \"0.21\", optional = true }\nopentelemetry_sdk = { version = \"0.21\", optional = true }\nopentelemetry-prometheus = { version = \"0.14\", optional = true }\nopentelemetry-jaeger = { version = \"0.20\", optional = true }\njsonwebtoken = { version = \"9.2\", optional = true }\ndeadpool = { version = \"0.10\", optional = true }\n${protocolDeps}\n\n[features]\ndefault = []\nprometheus = [\"dep:prometheus\", \"opentelemetry-prometheus\"]\nopentelemetry = [\"dep:opentelemetry\", \"dep:opentelemetry_sdk\"]\nauth = [\"dep:jsonwebtoken\"]\nconnection-pooling = [\"dep:deadpool\"]\nbatching = []\ndynamic-config = []\nfeature-flags = []\n\n[dev-dependencies]\n${devDeps}\n`}\n        </File>\n    );\n}\n"],"names":["CargoToml","asyncapi","params","info","defaultPackageName","title","transformed","toLowerCase","replace","length","packageName","useAsyncStd","servers","protocols","Set","Object","entries","forEach","_name","server","protocol","add","protocolDeps","has","asyncRuntime","devDeps","_jsx","File","name","children","description"],"mappings":"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"}